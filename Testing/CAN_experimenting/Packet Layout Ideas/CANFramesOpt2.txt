struct Frame
{
  byte data[8];
  void Set(byte loc, float value)
  {

  }
};

struct SpecificCommand
{
  float a; #define SCLoc_a 0
  float b; #define SCLoc_b 4
  SpecificCommand(){}
  SpecificCommand(Frame& t)
  {
    // Copy correct values from Frame into a and b.
    a = (float)*(t.data+SCLoc_a);
  }
  
  Frame generate_frame()
  {
    //Copy a and b into correct locaions in a new Frame and return it.
    Frame newFrame();
    Frame.Set(SCLoc_a,a);
  }


void main() {
	test foo;
	Drive_Cmd bar(foo);

	*(bar.a) = 3; //Con: values must be referenced 
}

    //Pros: Not architecture or compiler dependent.
    //Cons: Values must be accessed using a dereference operator. :(